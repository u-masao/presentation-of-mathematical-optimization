stages:
  generate_scenario:
    matrix:
      id: ${ids}
    cmd: >-
      poetry run python -m src.generate_scenario
      src/prompt.md
      data/interim/scenario-${item.id}.md
      --temperature=${temperature}
    deps:
    - src/generate_scenario.py
    - src/prompt.md
    outs:
    - data/interim/scenario-${item.id}.md
  convert_markdown_to_pdf:
    matrix:
      id: ${ids}
    cmd: >-
      mkdir -p build ; rm -f build/* ;
      cp src/style.css build/ ;
      cp data/interim/scenario-${item.id}.md build/temp.md ;
      docker run --rm -v ./build/:/home/marp/app marp-cli-ja marp
      temp.md -o temp.pdf --pdf --theme style.css;
      cp build/temp.pdf
      data/interim/scenario-${item.id}.pdf
    deps:
    - src/style.css
    - data/interim/scenario-${item.id}.md
    outs:
    - data/interim/scenario-${item.id}.pdf
  convert_markdown_to_pptx:
    matrix:
      id: ${ids}
    cmd: >-
      poetry run python -m src.md_to_pptx
      data/interim/scenario-${item.id}.md
      data/processed/scenario-${item.id}.pptx
    deps:
    - src/md_to_pptx.py
    - data/interim/scenario-${item.id}.md
    outs:
    - data/processed/scenario-${item.id}.pptx
  convert_pptx_to_pdf:
    matrix:
      id: ${ids}
    cmd: >-
      libreoffice --headless --convert-to pdf
      data/processed/scenario-${item.id}.pptx
      --outdir data/processed/
    deps:
    - data/processed/scenario-${item.id}.pptx
    outs:
    - data/processed/scenario-${item.id}.pdf
